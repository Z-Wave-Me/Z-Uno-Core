#ifndef __ZUNO_DEFINES___
#define __ZUNO_DEFINES___

#define ZUNO_CORES_SW_VERSION_MAJOR 		2
#define ZUNO_CORES_SW_VERSION_MINOR 		16
#define ZUNO_CORES_SW_VERSION               (ZUNO_CORES_SW_VERSION_MAJOR*100 + ZUNO_CORES_SW_VERSION_MINOR)

#define BACKWARD_COMPATIBILITY              0
// Addressing
#define MAX_GLOBAL_CFG  						16
#define ZUNO_STACK_SIZE 						50
// DATA
#define ZUNO_DELAY_USER_STACK_POINTER_ADDRESS 	0x6E
// XDATA
#define ZUNO_STACK_ADDRESS 						0x2329 
#define ZUNO_STACK_TOP_ADDRESS 					0x2328 
#define ZUNO_DELAY_SAFE_STACK_ADDRESS 			(ZUNO_STACK_SIZE + ZUNO_STACK_ADDRESS + 1)  
#define ZUNO_DELAY_USER_STACK_DELTA_ADDRESS 	(ZUNO_DELAY_SAFE_STACK_ADDRESS + 1)
#define SKETCH_USERSTRUCT_ADDRESS 				0x2E00
#define ZUNO_GLOBAL_CFG_ADDR					0x2F00
#define CALLBACK_TRANSLATION_ADDR   			0x3800  // At the high addresses of user XDATA
#define SYSCALL_TRANSLATION_ADDR				0x3810
#define ZUNO_NZRAM_ADRR             			0x125E
#define ZUNO_BEAMCOUNT_ADRR             		0x125D
#define ZUNO_WUOPTIONS_ADRR             		0x125C
#define ZUNO_NZRAM_ADRR             			0x125E
#define ZUNO_NID_ADRR							0x1255
#define ZUNO_MSCOUNTER_ADDR					    0x3A00 
#define MAX_USER_NZRAM							0x10


#define TXBUFF_ADDRESS           				(0x3A06)
#define PCMD_ADDRESS            				(0x3A04)
#define SKETCH_ACCEPTEDSTRUCT_ADDRESS   		0x3B00

// CODE SPACE
#define ZUNO_ISR_TABLE_ADDR 					0x8020
#if BACKWARD_COMPATIBILITY
#define SAVE_SKETCHCONTENT_SUBROUTINE 			0xFF00
#define SAVE_USERSTACK_SUBROUTINE 				0xFFA0
#else 
#define SAVE_SKETCHCONTENT_SUBROUTINE 			0xFFA8
#define SAVE_USERSTACK_SUBROUTINE 				0xFFE4
#endif
// EEPROM
#define START_CONFIGPARAM_EEPROM_ADDR			0x2000



#define ZUNO_PIN_STATE_HIGH 				1
#define ZUNO_PIN_STATE_LOW 	 				0
#define ZUNO_SWITCHED_ON 					0xFF
#define ZUNO_SWITCHED_OFF 					0

#define HIGH 								ZUNO_PIN_STATE_HIGH
#define LOW 								ZUNO_PIN_STATE_LOW


#define A0 									3
#define A1 									4
#define A2 									5
#define A3 									6
#define BATTERY								0xFF

#define PWM1 									13
#define PWM2 									14
#define PWM3 									15
#define PWM4 									16

#define CTRL_GROUP_1 							1
#define CTRL_GROUP_2 							2
#define CTRL_GROUP_3 							3
#define CTRL_GROUP_4 							4
#define CTRL_GROUP_5 							5


#define ZUNO_PIN_MODE_OUTPUT 				0
#define ZUNO_PIN_MODE_INPUT  				1
#define ZUNO_PIN_MODE_INPUT_WITH_PULLUP  	2
#define OUTPUT 								ZUNO_PIN_MODE_OUTPUT
#define INPUT 								ZUNO_PIN_MODE_INPUT
#define INPUT_PULLUP 						ZUNO_PIN_MODE_INPUT_WITH_PULLUP
#define LED_BUILTIN 						13
#define NULL 								0


#define DEBUG_ON 								1
#define DEBUG_OFF 								0

#define MAX(A,B)  (A > B ? A : B)
#define MIN(A,B)  (A < B ? A : B)

// SYSCALL NUMBERS	
enum {
	ZUNO_FUNC_PIN_MODE,
	ZUNO_FUNC_DIGITAL_WRITE,
	ZUNO_FUNC_DIGITAL_READ,
	ZUNO_FUNC_ANALOG_READ,
	ZUNO_FUNC_ANALOG_WRITE,
	ZUNO_FUNC_UNSOLICITED_REPORT,
	ZUNO_FUNC_ASSOCIATION_SEND,
	ZUNO_FUNC_DELAY_MS,
	ZUNO_FUNC_SERIAL_USB_BEGIN,
	ZUNO_FUNC_SERIAL_USB_END,
	ZUNO_FUNC_SERIAL_USB_AVAILABLE,
	ZUNO_FUNC_SERIAL_USB_READ,
	ZUNO_FUNC_SERIAL_USB_WRITE,
	ZUNO_FUNC_SERIAL1_BEGIN,
	ZUNO_FUNC_SERIAL1_END,
	ZUNO_FUNC_SERIAL1_AVAILABLE,
	ZUNO_FUNC_SERIAL1_READ,
	ZUNO_FUNC_SERIAL1_WRITE,
	ZUNO_FUNC_SERIAL0_BEGIN,
	ZUNO_FUNC_SERIAL0_END,
	ZUNO_FUNC_SERIAL0_AVAILABLE,
	ZUNO_FUNC_SERIAL0_READ,
	ZUNO_FUNC_SERIAL0_WRITE,
	ZUNO_FUNC_MILLIS,
	ZUNO_FUNC_SPI0_INIT,
	ZUNO_FUNC_SPI0_ENABLE,
	ZUNO_FUNC_SPI0_TRANSFER,
	ZUNO_FUNC_EEPROM_READ,
	ZUNO_FUNC_EEPROM_WRITE,
	ZUNO_FUNC_NZRAM_READ,
	ZUNO_FUNC_NZRAM_WRITE,
	ZUNO_FUNC_IR_SETUP,
	ZUNO_FUNC_IR_LEARN_RESET,
	ZUNO_FUNC_IR_IO,
	ZUNO_FUNC_IR_STATUS,
	ZUNO_FUNC_RADIO_POLL,
	ZUNO_FUNC_SETUP_FWUPGRADE,
	ZUNO_FUNC_COMMIT_CONFIG,
	ZUNO_FUNC_LEARN,
	ZUNO_FUNC_SPI0_TXDMA,
	ZUNO_FUNC_INT0_WUP_LEVEL,
	ZUNO_FUNC_BEAMCOUNT,
	ZUNO_FUNC_DBGSENDDATA,
	ZUNO_FUNC_CREATEPACKET,
	ZUNO_FUNC_TEST = 0xFE
};

enum{
		FW_AUTH_FAIL = 0x00,
		FW_AUTH_START = 0x01,
		FW_AUTH_DONE = 0xFF 
};
enum{
	ZUNO_LOGGING_EVENT_START 	= 0x00,
	ZUNO_LOGGING_EVENT_GOSLEEP 	= 0x01,
	ZUNO_LOGGING_EVENT_SETDEFAULT = 0x11,
	ZUNO_LOGGING_EVENT_LEARNCOMPLETE = 0x12,
	ZUNO_LOGGING_EVENT_EEPROMRESET = 0x13,
	ZUNO_LOGGING_EVENT_LEARNSTART = 0x14,
	ZUNO_LOGGING_EVENT_FWAUTH     = 0x15,
	ZUNO_LOGGING_EVENT_WRONGCONFIGDATA = 0x20,
	ZUNO_LOGGING_EVENT_ASSOCIATIONSEND_DROPPED = 0x90,
	ZUNO_LOGGING_EVENT_OUTGOING_POLICY_DROPPED = 0x91,
	ZUNO_LOGGING_EVENT_INCOMING_POLICY_DROPPED = 0x92,
	ZUNO_LOGGING_EVENT_STACKOVERFLOW 		= 0xA0,
	ZUNO_LOGGING_EVENT_PARAMSTACKOVERFLOW 	= 0xA1,
	ZUNO_LOGGING_EVENT_PARAMSTACKUNDERFLOW 	= 0xA2,
	ZUNO_LOGGING_EVENT_MEMACESSDENIED 	    = 0xA3,
	ZUNO_LOGGING_EVENT_PROTNOCALLBACK 	    = 0xA5,
	ZUNO_LOGGING_EVENT_CHANNELNOTFOUND 		= 0xA7,
	ZUNO_LOGGING_EVENT_WRONGUSERCODE 		= 0xB0,
	ZUNO_LOGGING_EVENT_WRONGSYSFUNC 		= 0xB1,
	ZUNO_LOGGING_EVENT_QUEUE_OVERLOAD   	= 0xC0,
	ZUNO_LOGGING_EVENT_REPORT_TOOFREQUENTLY   = 0xC1

};
// WAKEUP REASONS
enum 
{	
	ZUNO_WAKEUP_REASON_HARDRESET,
	ZUNO_WAKEUP_REASON_WUT,	
	ZUNO_WAKEUP_REASON_RADIO,
	ZUNO_WAKEUP_REASON_SOFTRESET,
	ZUNO_WAKEUP_REASON_INT1,
	ZUNO_WAKEUP_REASON_POR,
	ZUNO_WAKEUP_REASON_USBSUSPEND 	
};
// SHARED CONFIGURATION VARIABLES
enum 
{
	ZUNO_CFG_BYTE_ADC_RES,
	ZUNO_CFG_BYTE_ADC_REF,
	ZUNO_CFG_BYTE_ADC_ADV,
	ZUNO_CFG_BYTE_PWM_RES,
	ZUNO_CFG_BYTE_USERMODE,
	ZUNO_CFG_BYTE_WUP_REASON,
	ZUNO_CFG_BYTE_SLEEPLOCK,
	ZUNO_CFG_BYTE_REPORTLOCK,
	ZUNO_CFG_BYTE_REPORTMAP1,
	ZUNO_CFG_BYTE_REPORTMAP2,
	ZUNO_CFG_BYTE_REPORTMAP3,
	ZUNO_CFG_BYTE_REPORTMAP4,
	ZUNO_CFG_BYTE_FWAUTH

};

// USER-MODE CALLBACKS
enum {
	ZUNO_JUMP_TABLE_SETUP, 			//0
	ZUNO_JUMP_TABLE_LOOP, 			//1
	ZUNO_JUMP_TABLE_CALLBACK,		//2
};
// KNOWN CHANNEL TYPES
enum {
	ZUNO_SWITCH_BINARY_CHANNEL_NUMBER = 1, 			//0x01
	ZUNO_SWITCH_MULTILEVEL_CHANNEL_NUMBER, 			//0x02
	ZUNO_SENSOR_BINARY_CHANNEL_NUMBER, 				//0x03
	ZUNO_SENSOR_MULTILEVEL_CHANNEL_NUMBER, 			//0x04
	ZUNO_METER_CHANNEL_NUMBER, 						//0x05
	ZUNO_DOORLOCK_CHANNEL_NUMBER,					//0x06
	ZUNO_FLOWSTOP_CHANNEL_NUMBER,					//0x07
	ZUNO_SIREN_CHANNEL_NUMBER,						//0x08	
	ZUNO_BLINDS_CHANNEL_NUMBER,						//0x09
	ZUNO_THERMOSTAT_CHANNEL_NUMBER,					//0x0A
	ZUNO_SWITCH_COLOR_CHANNEL_NUMBER,				//0x0B
	ZUNO_END_OF_SUPPORTED_CC_NUM,
};
// FW UPGRADE AUTHORIZATIONS
enum
{
	ZUNO_FWUPGRADE_AUTHRADIO_LOCKED = 0,
	ZUNO_FWUPGRADE_AUTHRADIO_ANY	= 0xFFFFFFFF

};
// CCs
// Generally for reports identifing
enum
{	
	CC_BASIC 				= 0x20,
	CC_SWITCH_BINARY   		= 0x25,
	CC_SWITCH_MULTILEVEL 	= 0x26,
	CC_SENSOR_BINARY		= 0x30,
	CC_SENSOR_MULTILEVEL	= 0x31,
	CC_METER                = 0x32,
	CC_SWITCH_COLOR         = 0x33,
	CC_THERMOSTAT_MODE		= 0x40,
	CC_THERMOSTAT_SETPOINT  = 0x43
};
// ----------------------------------------------------------
// ISR
// ----------------------------------------------------------
enum
{
	ZUNO_ISR_INT0,
	ZUNO_ISR_INT1,
	ZUNO_ISR_ZEROX,
	ZUNO_ISR_GPTIMER,
	ZUNO_ISR_10MSTIMER,

	ZUNO_ISR_MAX  = 0x08	
};

enum{
	SYSCLOCK_NORMAL = 0,
	SYSCLOCK_BOOST = 1
};


#define ZUNO_EXT_INT0 	0
#define ZUNO_EXT_INT1 	1
#define ZUNO_EXT_ZEROX 	2

#define ZUNO_EXT_TRIGGER_DISABLED 		0
#define ZUNO_EXT_TRIGGER_FALLING_EDGE 	1
#define ZUNO_EXT_TRIGGER_RISING_EDGE 	2
#define ZUNO_EXT_TRIGGER_LOW_LEVEL		3
#define ZUNO_EXT_TRIGGER_HIGH_LEVEL		4

#define ZUNO_SETUP_ISR_INT0(FUNCTION_NAME)   	__code __at (ZUNO_ISR_TABLE_ADDR) 		ZUNO_ISR_DESCRIPTION ISR_VEC_INT0 =  { 0x02, FUNCTION_NAME}
#define ZUNO_SETUP_ISR_INT0_DEFAULT()   	 	__code __at (ZUNO_ISR_TABLE_ADDR) 		ZUNO_ISR_DESCRIPTION ISR_VEC_INT0 =  { 0x22, 0x0000}
#define ZUNO_SETUP_ISR_INT1(FUNCTION_NAME)   	__code __at (ZUNO_ISR_TABLE_ADDR + 3) 	ZUNO_ISR_DESCRIPTION ISR_VEC_INT1 =  { 0x02, FUNCTION_NAME}
#define ZUNO_SETUP_ISR_INT1_DEFAULT()   	 	__code __at (ZUNO_ISR_TABLE_ADDR + 3) 	ZUNO_ISR_DESCRIPTION ISR_VEC_INT1 =  { 0x22, 0x0000}
#define ZUNO_SETUP_ISR_ZEROX(FUNCTION_NAME)  	__code __at (ZUNO_ISR_TABLE_ADDR + 6) 	ZUNO_ISR_DESCRIPTION ISR_VEC_ZERX =  { 0x02, FUNCTION_NAME}
#define ZUNO_SETUP_ISR_ZEROX_DEFAULT()   	 	__code __at (ZUNO_ISR_TABLE_ADDR + 6) 	ZUNO_ISR_DESCRIPTION ISR_VEC_ZERX =  { 0x22, 0x0000}
#define ZUNO_SETUP_ISR_GPTIMER(FUNCTION_NAME)  	__code __at (ZUNO_ISR_TABLE_ADDR + 9) 	ZUNO_ISR_DESCRIPTION ISR_VEC_GPTM =  { 0x02, FUNCTION_NAME}
#define ZUNO_SETUP_ISR_GPTIMER_DEFAULT()   	 	__code __at (ZUNO_ISR_TABLE_ADDR + 9) 	ZUNO_ISR_DESCRIPTION ISR_VEC_GPTM =  { 0x22, 0x0000}
#define ZUNO_SETUP_ISR_1MSTIMER(FUNCTION_NAME)  __code __at (ZUNO_ISR_TABLE_ADDR + 12) 	ZUNO_ISR_DESCRIPTION ISR_VEC_1TM  =  { 0x02, FUNCTION_NAME}
#define ZUNO_SETUP_ISR_1MSTIMER_DEFAULT()   	__code __at (ZUNO_ISR_TABLE_ADDR + 12) 	ZUNO_ISR_DESCRIPTION ISR_VEC_1TM  =  { 0x22, 0x0000}

// ----------------------------------------------------------
// CHANNELS CONFIGURAION HELPERS/CONSTANTS 
// ----------------------------------------------------------

// Sensor Binary types
#define ZUNO_SENSOR_BINARY_TYPE_GENERAL_PURPOSE 		0x01
#define ZUNO_SENSOR_BINARY_TYPE_SMOKE 					0x02
#define ZUNO_SENSOR_BINARY_TYPE_CO 						0x03
#define ZUNO_SENSOR_BINARY_TYPE_CO2 					0x04
#define ZUNO_SENSOR_BINARY_TYPE_HEAT 					0x05
#define ZUNO_SENSOR_BINARY_TYPE_WATER 					0x06
#define ZUNO_SENSOR_BINARY_TYPE_FREEZE 					0x07
#define ZUNO_SENSOR_BINARY_TYPE_TAMPER 					0x08
#define ZUNO_SENSOR_BINARY_TYPE_AUX 					0x09
#define ZUNO_SENSOR_BINARY_TYPE_DOOR_WINDOW 			0x0a
#define ZUNO_SENSOR_BINARY_TYPE_TILT 					0x0b
#define ZUNO_SENSOR_BINARY_TYPE_MOTION 					0x0c
#define ZUNO_SENSOR_BINARY_TYPE_GLASSBREAK 				0x0d

// Notifications
//Notification types
#define NOTIFICATION_TYPE_SMOKE_ALARM					0x01
#define NOTIFICATION_TYPE_CO_ALARM 						0x02
#define NOTIFICATION_TYPE_CO2_ALARM						0x03
#define NOTIFICATION_TYPE_HEAT_ALARM					0x04
#define NOTIFICATION_TYPE_WATER_ALARM 					0x05
#define NOTIFICATION_TYPE_ACCESS_CONTROL_ALARM			0x06
#define NOTIFICATION_TYPE_BURGLAR_ALARM					0x07
#define NOTIFICATION_TYPE_POWER_MANAGEMENT_ALARM		0x08
#define NOTIFICATION_TYPE_SYSTEM_ALARM 					0x09
#define NOTIFICATION_TYPE_EMERGENCY_ALARM				0x0a
#define NOTIFICATION_TYPE_CLOCK_ALARM					0x0b
#define NOTIFICATION_TYPE_APPLIANCE_ALARM				0x0c
#define NOTIFICATION_ON_VALUE							0xff
#define NOTIFICATION_OFF_VALUE							0x00
//Notification events (UL=Unknown Location)
#define NOTIFICATION_UNKNOWN_EVENT						0xfe
//Smoke
#define NOTIFICATION_EVENT_SMOKE						0x01
#define NOTIFICATION_EVENT_SMOKE_UL						0x02
#define NOTIFICATION_EVENT_SMOKE_TEST					0x03
//CO
#define NOTIFICATION_EVENT_CO							0x01
#define NOTIFICATION_EVENT_CO_UL						0x02
#define NOTIFICATION_EVENT_CO_TEST						0x03
//CO2
#define NOTIFICATION_EVENT_CO2							0x01
#define NOTIFICATION_EVENT_CO2_UL						0x02
//HEAT
#define NOTIFICATION_EVENT_OVERHEAT						0x01
#define NOTIFICATION_EVENT_OVERHEAT_UL					0x02
#define NOTIFICATION_EVENT_TEMP_RISE					0x03
#define NOTIFICATION_EVENT_TEMP_RISE_UL					0x04
#define NOTIFICATION_EVENT_UNDERHEAT					0x05
#define NOTIFICATION_EVENT_UNDERHEAT_UL					0x06
//WATER
#define NOTIFICATION_EVENT_WATER_LEAK					0x01
#define NOTIFICATION_EVENT_WATER_LEAK_UL				0x02
#define NOTIFICATION_EVENT_WATER_LEVEL_DROP				0x03
#define NOTIFICATION_EVENT_WATER_LEVEL_DROP_UL			0x04
//ACCESS
#define NOTIFICATION_EVENT_MANUAL_LOCK					0x01
#define NOTIFICATION_EVENT_MANUAL_UNLOCK				0x02
#define NOTIFICATION_EVENT_MANUAL_NOT_FULLY_LOCKED		0x07
#define NOTIFICATION_EVENT_RF_LOCK						0x03
#define NOTIFICATION_EVENT_RF_UNLOCK					0x04
#define NOTIFICATION_EVENT_RF_NOT_FULLY_LOCKED			0x08
#define NOTIFICATION_EVENT_KEYPAD_LOCK					0x05
#define NOTIFICATION_EVENT_KEYPAD_UNLOCK				0x06
#define NOTIFICATION_EVENT_AUTO_LOCKED					0x09
#define NOTIFICATION_EVENT_AUTO_LOCK_NOT_FULLY_LOCKED	0x0a
#define NOTIFICATION_EVENT_LOCK_JAMMED					0x0b
#define NOTIFICATION_EVENT_ALL_USER_CODES_DELETED		0x0c
#define NOTIFICATION_EVENT_SINGLE_USER_CODE_DELETED		0x0d
#define NOTIFICATION_EVENT_NEW_USER_CODE_ADDED			0X0e
#define NOTIFICATION_EVENT_NEW_USER_CODE_NOT_ADDED		0x0f
#define NOTIFICATION_EVENT_KEYPAD_TEMPORARY_DISABLE		0x10
#define NOTIFICATION_EVENT_KEYPAD_BUSY					0x11
#define NOTIFICATION_EVENT_NEW_PROGRAM_CODE_ENTERED		0x12
#define NOTIFICATION_EVENT_MANUAL_CODE_EXCEEDS_LIMITS	0x13
#define NOTIFICATION_EVENT_RF_UNLOCK_INVALID_CODE		0x14
#define NOTIFICATION_EVENT_RF_LOCK_INVALID_CODE			0x15
#define NOTIFICATION_EVENT_WINDOW_DOOR_OPENED			0x16
#define NOTIFICATION_EVENT_WINDOW_DOOR_CLOSED			0x17
//BURGLAR, HOME SECURITY
#define NOTIFICATION_EVENT_INTRUSION					0x01
#define NOTIFICATION_EVENT_INTRUSION_UL					0x02
#define NOTIFICATION_EVENT_TAMPER_REMOVED				0x03
#define NOTIFICATION_EVENT_TAMPER_INVALID_CODE			0x04
#define NOTIFICATION_EVENT_GLASS_BREAK					0x05
#define NOTIFICATION_EVENT_GLASS_BREAK_UL				0x06
#define NOTIFICATION_EVENT_MOTION_DETECTION				0x07
#define NOTIFICATION_EVENT_MOTION_DETECTION_UL			0x08
//POWER MANAGEMENT
#define NOTIFICATION_EVENT_POWER_APPLIED				0x01
#define NOTIFICATION_EVENT_AC_DISCONNECTED				0x02
#define NOTIFICATION_EVENT_AC_RECONNECTED				0x03
#define NOTIFICATION_EVENT_SURGE						0x04
#define NOTIFICATION_EVENT_VOLTAGE_DROP					0x05
#define NOTIFICATION_EVENT_OVER_CURRENT					0x06
#define NOTIFICATION_EVENT_OVER_VOLTAGE					0x07
#define NOTIFICATION_EVENT_OVER_LOAD					0x08
#define NOTIFICATION_EVENT_LOAD_ERROR					0x09
#define NOTIFICATION_EVENT_REPLACE_BAT_SOON				0x0a
#define NOTIFICATION_EVENT_REPLACE_BAT_NOW				0x0b
//SYSTEM
#define NOTIFICATION_EVENT_HW_FAIL						0x01
#define NOTIFICATION_EVENT_SW_FAIL						0x02
#define NOTIFICATION_EVENT_HW_FAIL_OEM					0x03
#define NOTIFICATION_EVENT_SW_FAIL_OEM					0x04
//EMERGENCY_ALARM
#define NOTIFICATION_EVENT_CONTACT_POLICE				0x01
#define NOTIFICATION_EVENT_CONTACT_FIREMEN				0x02
#define NOTIFICATION_EVENT_CONTACT_MEDIC				0x03
//CLOCK
#define NOTIFICATION_EVENT_WAKE_UP_ALERT				0x01
#define NOTIFICATION_EVENT_TIMER_ENDED					0x02


// Meter
#define ZUNO_METER_TYPE_ELECTRIC	                    0x01
#define ZUNO_METER_TYPE_GAS		                        0x02
#define ZUNO_METER_TYPE_WATER		                    0x03
#define ZUNO_METER_RESETABLE		                    0x80
#define ZUNO_METER_ELECTRIC_SCALE_KWH	                 0x00
#define ZUNO_METER_ELECTRIC_SCALE_KVAH		             0x01
#define ZUNO_METER_ELECTRIC_SCALE_WATTS		             0x02
#define ZUNO_METER_ELECTRIC_SCALE_PULSECOUNT		     0x03
#define ZUNO_METER_ELECTRIC_SCALE_VOLTS		     		 0x04
#define ZUNO_METER_ELECTRIC_SCALE_AMPS		     		 0x05
#define ZUNO_METER_ELECTRIC_SCALE_POWERFACTOR		     0x06
#define ZUNO_METER_ELECTRIC_SCALE_MST		  			 0x07
#define ZUNO_METER_GAS_SCALE_METERS3	                 0x00
#define ZUNO_METER_GAS_SCALE_FEET3		             	 0x01
#define ZUNO_METER_GAS_SCALE_PULSECOUNT		    		 0x03
#define ZUNO_METER_WATER_SCALE_METERS3	                 0x00
#define ZUNO_METER_WATER_SCALE_FEET3		             0x01
#define ZUNO_METER_WATER_SCALE_GALLONS		             0x02
#define ZUNO_METER_WATER_SCALE_PULSECOUNT		    	 0x03
#define ZUNO_METER_WATER_SCALE_MST		    	 		 0x07
#define METER_PRECISION_ZERO_DECIMALS 					 0x00
#define METER_PRECISION_ONE_DECIMAL 					 0x01
#define METER_PRECISION_TWO_DECIMALS 					 0x02
#define METER_PRECISION_THREE_DECIMALS 					 0x03
#define METER_RESET_ENABLE 								 0x01
#define METER_RESET_DISABLE 							 0x00
#define METER_SIZE_ONE_BYTE 							 0x01
#define METER_SIZE_TWO_BYTES 							 0x02
#define METER_SIZE_FOUR_BYTES 							 0x04
#define METER_PROPERTIES_COMBINER(SCALE,SIZE,PRECISION) \
			(((SIZE-1) & 0x03) << 6)| \
			((SCALE & 0x07)) | \
			((PRECISION & 0x07) << 3)

#define METER_EMPTY_RESETTER							








// Sensor Multilevel types
#define ZUNO_SENSOR_MULTILEVEL_TYPE_TEMPERATURE		                                   	0x01
#define ZUNO_SENSOR_MULTILEVEL_TYPE_GENERAL_PURPOSE_VALUE		                        0x02
#define ZUNO_SENSOR_MULTILEVEL_TYPE_LUMINANCE		                                    0x03
#define ZUNO_SENSOR_MULTILEVEL_TYPE_POWER		                                        0x04
#define ZUNO_SENSOR_MULTILEVEL_TYPE_RELATIVE_HUMIDITY		                            0x05
#define ZUNO_SENSOR_MULTILEVEL_TYPE_VELOCITY		                                    0x06
#define ZUNO_SENSOR_MULTILEVEL_TYPE_DIRECTION		                                    0x07
#define ZUNO_SENSOR_MULTILEVEL_TYPE_ATMOSPHERIC_PRESSURE		                        0x08
#define ZUNO_SENSOR_MULTILEVEL_TYPE_BAROMETRIC_PRESSURE		                           	0x09
#define ZUNO_SENSOR_MULTILEVEL_TYPE_SOLAR_RADIATION		                               	0x0A
#define ZUNO_SENSOR_MULTILEVEL_TYPE_DEW_POINT		                                    0x0B
#define ZUNO_SENSOR_MULTILEVEL_TYPE_RAIN_RATE		                                    0x0C
#define ZUNO_SENSOR_MULTILEVEL_TYPE_TIDE_LEVEL		                                    0x0D
#define ZUNO_SENSOR_MULTILEVEL_TYPE_WEIGHT		                                        0x0E
#define ZUNO_SENSOR_MULTILEVEL_TYPE_VOLTAGE		                                       	0x0F
#define ZUNO_SENSOR_MULTILEVEL_TYPE_CURRENT		                                       	0x10
#define ZUNO_SENSOR_MULTILEVEL_TYPE_CO2_LEVEL		                                    0x11
#define ZUNO_SENSOR_MULTILEVEL_TYPE_AIR_FLOW		                                    0x12
#define ZUNO_SENSOR_MULTILEVEL_TYPE_TANK_CAPACITY		                                0x13
#define ZUNO_SENSOR_MULTILEVEL_TYPE_DISTANCE		                                    0x14
#define ZUNO_SENSOR_MULTILEVEL_TYPE_ANGLE_POSITION		                                0x15
#define ZUNO_SENSOR_MULTILEVEL_TYPE_ROTATION                                            0x16
#define ZUNO_SENSOR_MULTILEVEL_TYPE_WATER_TEMPERATURE                                   0x17
#define ZUNO_SENSOR_MULTILEVEL_TYPE_SOIL_TEMPERATURE                                    0x18
#define ZUNO_SENSOR_MULTILEVEL_TYPE_SEISMIC_INTENSITY                                   0x19
#define ZUNO_SENSOR_MULTILEVEL_TYPE_SEISMIC_MAGNITUDE                                   0x1A
#define ZUNO_SENSOR_MULTILEVEL_TYPE_ULTRAVIOLET                                         0x1B
#define ZUNO_SENSOR_MULTILEVEL_TYPE_ELECTRICAL_RESISTIVITY                              0x1C
#define ZUNO_SENSOR_MULTILEVEL_TYPE_ELECTRICAL_CONDUCTIVITY                             0x1D
#define ZUNO_SENSOR_MULTILEVEL_TYPE_LOUDNESS                                            0x1E
#define ZUNO_SENSOR_MULTILEVEL_TYPE_MOISTURE                                            0x1F
#define ZUNO_SENSOR_MULTILEVEL_TYPE_FREQUENCY                                           0x20
#define ZUNO_SENSOR_MULTILEVEL_TYPE_TIME                                                0x21

#define ZUNO_SENSOR_MULTILEVEL_TYPE_FORMALDEHYDE_CH2O_LEVEL                             0x24
#define ZUNO_SENSOR_MULTILEVEL_TYPE_RADON_CONCENTRATION                                 0x25
#define ZUNO_SENSOR_MULTILEVEL_TYPE_METHANE_DENSITY_CH4                                 0x26
#define ZUNO_SENSOR_MULTILEVEL_TYPE_VOLATILE_ORGANIC_COMPOUND                           0x27
#define ZUNO_SENSOR_MULTILEVEL_TYPE_CARBON_MONOXIDE_CO                           		0x28

#define ZUNO_SENSOR_MULTILEVEL_TYPE_WATER_FLOW                           				0x37

//Sensor Multilevel scales,sizes,precisions
#define SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS 									0x00
#define SENSOR_MULTILEVEL_PRECISION_ONE_DECIMAL 									0x01
#define SENSOR_MULTILEVEL_PRECISION_TWO_DECIMALS 									0x02
#define SENSOR_MULTILEVEL_SIZE_ONE_BYTE 											0x01
#define SENSOR_MULTILEVEL_SIZE_TWO_BYTES 											0x02
#define SENSOR_MULTILEVEL_SIZE_FOUR_BYTES 											0x04

// Air temperature
#define SENSOR_MULTILEVEL_SCALE_CELSIUS 											0x00 
//General purpose
#define SENSOR_MULTILEVEL_SCALE_PERCENTAGE_VALUE									0x00 
#define SENSOR_MULTILEVEL_SCALE_DIMENSIONLESS_VALUE									0x01 

//Luminance
#define SENSOR_MULTILEVEL_SCALE_LUX													0x01
//Power
#define SENSOR_MULTILEVEL_SCALE_WATT												0x00
#define SENSOR_MULTILEVEL_SCALE_BTU_PER_HOUR										0x01
//Humidity
#define SENSOR_MULTILEVEL_SCALE_PERCENTAGE_VALUE									0x00 
//Moisture
#define SENSOR_MULTILEVEL_SCALE_PERCENTAGE_VALUE									0x00
//Velocity
#define SENSOR_MULTILEVEL_SCALE_METERS_PER_SECOND	 								0x00
//Athmospheric pressure
#define SENSOR_MULTILEVEL_SCALE_KILO_PASCAL 										0x00
//Barometric pressure
#define SENSOR_MULTILEVEL_SCALE_KILOPASCAL										0x00
//Solar radiation
#define SENSOR_MULTILEVEL_SCALE_WAVELENGTH_PER_SQUARE_METER								0x00
//Dew point
#define SENSOR_MULTILEVEL_SCALE_CELSIUS											0x00
//Rain rate
#define SENSOR_MULTILEVEL_SCALE_MILLIMETERS_PER_HOUR									0x00
//Tide level
#define SENSOR_MULTILEVEL_SCALE_METER											0x00
//Weight
#define SENSOR_MULTILEVEL_SCALE_KILOGRAM										0x00
//Voltage
#define SENSOR_MULTILEVEL_SCALE_VOLT											0x00
//Current
#define SENSOR_MULTILEVEL_SCALE_AMPERE											0x00
//CO2 level
#define SENSOR_MULTILEVEL_SCALE_PARTS_PER_MILLION										0x00
//Air flow
#define SENSOR_MULTILEVEL_SCALE_CUBIC_METER_PER_HOUR									0x00
//Tank capacity
#define SENSOR_MULTILEVEL_SCALE_LITER											0x00
//Distance
#define SENSOR_MULTILEVEL_SCALE_METER											0x00
//Angle position
#define SENSOR_MULTILEVEL_SCALE_PERCENTAGE_VALUE								0x00
//Rotation
#define SENSOR_MULTILEVEL_SCALE_REVOLUTION_PER_MINUTE  							0x00
//Water temperature
#define SENSOR_MULTILEVEL_SCALE_CELSIUS											0x00
//Soil temperature
#define SENSOR_MULTILEVEL_SCALE_CELSIUS											0x00
//Seismic intensity 
#define SENSOR_MULTILEVEL_SCALE_MERCALLI										0x00
//Seismic magnitude 
#define SENSOR_MULTILEVEL_SCALE_LOCAL											0x00
//Ultraviolet
#define SENSOR_MULTILEVEL_SCALE_ULTRAVIOLET_INDEX								0x00
//Electrical conductivity 
#define SENSOR_MULTILEVEL_SCALE_SIEMENS_PER_METER								0x00
//Electrical resistivity 
#define SENSOR_MULTILEVEL_SCALE_OHM_METER										0x00
//Loudness
#define SENSOR_MULTILEVEL_SCALE_DECIBELS										0x00
//Frequency
#define SENSOR_MULTILEVEL_SCALE_HERTZ											0x00
//Time
#define SENSOR_MULTILEVEL_SCALE_SECOND											0x00
//Target temperature
#define SENSOR_MULTILEVEL_SCALE_CELSIUS											0x00
#define SENSOR_MULTILEVEL_SCALE_LITERS_PER_HOUR									0x00

//Sensor Multilevel Properties
#define SENSOR_MULTILEVEL_PROPERTIES_SIZE_MASK                                      0x07
#define SENSOR_MULTILEVEL_PROPERTIES_SCALE_SHIFT                                    0x03
#define SENSOR_MULTILEVEL_PROPERTIES_SCALE_MASK                                     0x18
#define SENSOR_MULTILEVEL_PROPERTIES_PRECISION_SHIFT                                0x05
#define SENSOR_MULTILEVEL_PROPERTIES_PRECISION_MASK                                 0xE0
#define SENSOR_MULTILEVEL_PROPERTIES_COMBINER(SCALE,SIZE,PRECISION) \
			(SIZE & SENSOR_MULTILEVEL_PROPERTIES_SIZE_MASK) | \
			((SCALE << SENSOR_MULTILEVEL_PROPERTIES_SCALE_SHIFT) & SENSOR_MULTILEVEL_PROPERTIES_SCALE_MASK) | \
			((PRECISION << SENSOR_MULTILEVEL_PROPERTIES_PRECISION_SHIFT) & SENSOR_MULTILEVEL_PROPERTIES_PRECISION_MASK)
#define MACRO_CAST_POINTER_TO_VOID(FUNCTION) 										FUNCTION //((VOID_FUNC_POINTER_VOID) FUNCTION)


// Thermostats

#define THERMOSTAT_FLAGS_OFF					0x01
#define THERMOSTAT_FLAGS_HEAT					0x02
#define THERMOSTAT_FLAGS_COOL					0x04
#define THERMOSTAT_FLAGS_FURNACE				0x08
#define THERMOSTAT_FLAGS_DRY					0x10
#define THERMOSTAT_FLAGS_MOIST					0x20
#define THERMOSTAT_FLAGS_AUTO_CHANGEOVER		0x40
#define THERMOSTAT_FLAGS_AUTO					THERMOSTAT_FLAGS_AUTO_CHANGEOVER
#define THERMOSTAT_FLAGS_FULL_POWER				0x80


#define THERMOSTAT_MODE_OFF				0x00
#define THERMOSTAT_MODE_HEAT			0x01
#define THERMOSTAT_MODE_COOL			0x02
#define THERMOSTAT_MODE_FURNACE			0x07
#define THERMOSTAT_MODE_DRY				0x08
#define THERMOSTAT_MODE_MOIST			0x09
#define THERMOSTAT_MODE_AUTO_CHANGEOVER	0x0A
#define THERMOSTAT_MODE_AUTO			THERMOSTAT_MODE_AUTO_CHANGEOVER
#define THERMOSTAT_MODE_FULL_POWER		0x0F



#define THERMOSTAT_UNITS_CELSIUS		0
#define THERMOSTAT_UNITS_FAHRENHEIT		0x80
#define THERMOSTAT_RANGE_NEG			0x20
#define THERMOSTAT_RANGE_POS			0x40
#define THERMOSTAT_LIMITS_MASK			0x1F
#define THERMOSTAT_PROPERTIES_COMBINER(UNITS, POS_NEG, LIMITS)						(UNITS | POS_NEG | (LIMITS & THERMOSTAT_LIMITS_MASK))
// Switch color
#define SWITCH_COLOR_FLAGS_WARM_WHITE	0x01
#define SWITCH_COLOR_FLAGS_COLD_WHITE 	0x02
#define SWITCH_COLOR_FLAGS_RED 			0x04
#define SWITCH_COLOR_FLAGS_GREEN 		0x08
#define SWITCH_COLOR_FLAGS_BLUE 		0x10
#define SWITCH_COLOR_FLAGS_AMBER 		0x20
#define SWITCH_COLOR_FLAGS_CYAN 		0x40
#define SWITCH_COLOR_FLAGS_PURPLE 		0x80

#define SWITCH_COLOR_COMPONENT_WARM_WHITE  0x00
#define SWITCH_COLOR_COMPONENT_COLD_WHITE  0x01
#define SWITCH_COLOR_COMPONENT_RED         0x02
#define SWITCH_COLOR_COMPONENT_GREEN       0x03
#define SWITCH_COLOR_COMPONENT_BLUE        0x04
#define SWITCH_COLOR_COMPONENT_AMBER       0x05
#define SWITCH_COLOR_COMPONENT_CYAN        0x06
#define SWITCH_COLOR_COMPONENT_PURPLE      0x07






// Sensor Binary also has a Notification CC, binded to it
#define ZUNO_NOTIFICATION_TURNED_ON 												0xFF

//
#define ZUNO_NO_CHANNEL 														{0, 0, 0, 0, 0}
#define ZUNO_SWITCH_BINARY(GETTER, SETTER)   												{ZUNO_SWITCH_BINARY_CHANNEL_NUMBER, 0, 0, (void*)GETTER, (void*)SETTER, (void*)0, (void*)0}
#define ZUNO_SIREN(GETTER, SETTER)   														{ZUNO_SIREN_CHANNEL_NUMBER, 0, 0, (void*)GETTER, (void*)SETTER,  (void*)0, (void*)0}
#define ZUNO_FLOWSTOP(GETTER, SETTER)   													{ZUNO_FLOWSTOP_CHANNEL_NUMBER, 0, 0, (void*)GETTER, (void*)SETTER,  (void*)0, (void*)0}
#define ZUNO_SWITCH_MULTILEVEL(GETTER, SETTER) 												{ZUNO_SWITCH_MULTILEVEL_CHANNEL_NUMBER, 0, 0, (void*)GETTER, (void*)SETTER,  (void*)0, (void*)0}
#define ZUNO_BLINDS(GETTER, SETTER)															{ZUNO_BLINDS_CHANNEL_NUMBER, 0, 0, (void*)GETTER, (void*)SETTER,  (void*)0, (void*)0}
#define ZUNO_SENSOR_BINARY(TYPE, GETTER) 													{ZUNO_SENSOR_BINARY_CHANNEL_NUMBER, TYPE, ZUNO_NOTIFICATION_TURNED_ON, (void*)GETTER, (void*)MACRO_CAST_POINTER_TO_VOID(0),  (void*)0, (void*)0}
#define ZUNO_SENSOR_MULTILEVEL(TYPE, SCALE, SIZE, PRECISION, GETTER) 						{ZUNO_SENSOR_MULTILEVEL_CHANNEL_NUMBER, TYPE, SENSOR_MULTILEVEL_PROPERTIES_COMBINER(SCALE, SIZE, PRECISION), (void*)GETTER, MACRO_CAST_POINTER_TO_VOID(0),  (void*)0, (void*)0}
#define ZUNO_THERMOSTAT(MODES, UNITS, NEG_POS, LIMITS, GETTER1, SETTER1, GETTER2, SETTER2 )	{ZUNO_THERMOSTAT_CHANNEL_NUMBER, MODES, THERMOSTAT_PROPERTIES_COMBINER(UNITS, NEG_POS, LIMITS), (void*) GETTER1, (void*) SETTER1, (void*) GETTER2, (void*) SETTER2} 
#define ZUNO_SWITCH_COLOR(COLORS, GETTER, SETTER)											{ZUNO_SWITCH_COLOR_CHANNEL_NUMBER, COLORS, 0,    (void*)GETTER, (void*)SETTER, (void*)0, (void*)0} 
#define ZUNO_DOORLOCK(GETTER, SETTER)   													{ZUNO_DOORLOCK_CHANNEL_NUMBER, 0, 0, (void*)GETTER, (void*)SETTER,  (void*)0, (void*)0}
#define ZUNO_METER(TYPE, RESETABLE,  SCALE, SIZE, PRECISION, GETTER, RESETTER) 				{ZUNO_METER_CHANNEL_NUMBER, TYPE | ((RESETABLE&0x01) << 7), METER_PROPERTIES_COMBINER(SCALE, SIZE, PRECISION), (void*)GETTER, (void*)RESETTER,  (void*)0, (void*)0}


#define ZUNO_SENSOR_BINARY_GENERAL_PURPOSE(GETTER)							ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_GENERAL_PURPOSE, GETTER)
#define ZUNO_SENSOR_BINARY_SMOKE(GETTER)									ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_SMOKE, GETTER)
#define ZUNO_SENSOR_BINARY_CO(GETTER)										ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_CO, GETTER)
#define ZUNO_SENSOR_BINARY_CO2(GETTER)										ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_CO2, GETTER)
#define ZUNO_SENSOR_BINARY_HEAT(GETTER)										ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_HEAT, GETTER)
#define ZUNO_SENSOR_BINARY_WATER(GETTER)									ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_WATER, GETTER)
#define ZUNO_SENSOR_BINARY_FREEZE(GETTER)									ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_FREEZE, GETTER)
#define ZUNO_SENSOR_BINARY_TAMPER(GETTER)									ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_TAMPER, GETTER)
#define ZUNO_SENSOR_BINARY_AUX(GETTER)										ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_AUX, GETTER)
#define ZUNO_SENSOR_BINARY_DOOR_WINDOW(GETTER)								ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_DOOR_WINDOW, GETTER)
#define ZUNO_SENSOR_BINARY_TILT(GETTER)										ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_TILT, GETTER)
#define ZUNO_SENSOR_BINARY_MOTION(GETTER)									ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_MOTION, GETTER)
#define ZUNO_SENSOR_BINARY_GLASSBREAK(GETTER)								ZUNO_SENSOR_BINARY(ZUNO_SENSOR_BINARY_TYPE_GLASSBREAK, GETTER)


#define ZUNO_SENSOR_MULTILEVEL_TEMPERATURE(GETTER) 							ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_TEMPERATURE, SENSOR_MULTILEVEL_SCALE_CELSIUS, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)	
#define ZUNO_SENSOR_MULTILEVEL_GENERAL_PURPOSE(GETTER) 						ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_GENERAL_PURPOSE_VALUE, SENSOR_MULTILEVEL_SCALE_PERCENTAGE_VALUE, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_LUMINANCE(GETTER) 							ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_LUMINANCE, SENSOR_MULTILEVEL_SCALE_LUX, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_POWER(GETTER) 								ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_POWER, SENSOR_MULTILEVEL_SCALE_WATT, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_HUMIDITY(GETTER) 							ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_RELATIVE_HUMIDITY, SENSOR_MULTILEVEL_SCALE_PERCENTAGE_VALUE, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_VELOCITY(GETTER)								ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_VELOCITY, SENSOR_MULTILEVEL_SCALE_METERS_PER_SECOND, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
//#define ZUNO_SENSOR_MULTILEVEL_DIRECTION(GETTER)
#define ZUNO_SENSOR_MULTILEVEL_ATHMOSPHERIC_PRESSURE(GETTER)				ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_ATMOSPHERIC_PRESSURE, SENSOR_MULTILEVEL_SCALE_KILO_PASCAL, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_BAROMETRIC_PRESSURE(GETTER)					ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_BAROMETRIC_PRESSURE, SENSOR_MULTILEVEL_SCALE_KILO_PASCAL, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_SOLAR_RADIATION(GETTER)						ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_SOLAR_RADIATION, SENSOR_MULTILEVEL_SCALE_WAVELENGTH_PER_SQUARE_METER, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_DEW_POINT(GETTER)							ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_DEW_POINT, SENSOR_MULTILEVEL_SCALE_CELSIUS, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_RAIN_RATE(GETTER)							ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_RAIN_RATE, SENSOR_MULTILEVEL_SCALE_MILLIMETERS_PER_HOUR, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_TIDE_LEVEL(GETTER)							ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_TIDE_LEVEL, SENSOR_MULTILEVEL_SCALE_METER, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_WEIGHT(GETTER)								ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_WEIGHT, SENSOR_MULTILEVEL_SCALE_KILOGRAM, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_VOLTAGE(GETTER)								ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_VOLTAGE, SENSOR_MULTILEVEL_SCALE_VOLT, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_CURRENT(GETTER)								ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_CURRENT, SENSOR_MULTILEVEL_SCALE_AMPERE, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_CO2_LEVEL(GETTER)							ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_CO2_LEVEL, SENSOR_MULTILEVEL_SCALE_PARTS_PER_MILLION, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_AIR_FLOW(GETTER)								ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_AIR_FLOW, SENSOR_MULTILEVEL_SCALE_CUBIC_METER_PER_HOUR, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_TANK_CAPACITY(GETTER)						ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_TANK_CAPACITY, SENSOR_MULTILEVEL_SCALE_LITER, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_DISTANCE(GETTER)								ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_DISTANCE, SENSOR_MULTILEVEL_SCALE_METER, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_MOISTURE(GETTER)								ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_MOISTURE, SENSOR_MULTILEVEL_SCALE_PERCENTAGE_VALUE, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_ANGLE_POSITION(GETTER)						ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_ANGLE_POSITION, SENSOR_MULTILEVEL_SCALE_PERCENTAGE_VALUE, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_ROTATION(GETTER)								ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_ROTATION, SENSOR_MULTILEVEL_SCALE_REVOLUTION_PER_MINUTE, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_WATER_TEMPERATURE(GETTER)					ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_WATER_TEMPERATURE, SENSOR_MULTILEVEL_SCALE_CELSIUS, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_SOIL_TEMPERATURE(GETTER)						ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_SOIL_TEMPERATURE, SENSOR_MULTILEVEL_SCALE_CELSIUS, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_SEISMIC_INTENSITY(GETTER)					ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_SEISMIC_INTENSITY, SENSOR_MULTILEVEL_SCALE_MERCALLI, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_SEISMIC_MAGNITUDE(GETTER)					ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_SEISMIC_MAGNITUDE, SENSOR_MULTILEVEL_SCALE_LOCAL, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_ULTRAVIOLET(GETTER)							ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_ULTRAVIOLET, SENSOR_MULTILEVEL_SCALE_ULTRAVIOLET_INDEX, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_ELECTRICAL_RESISTIVITY(GETTER)				ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_ELECTRICAL_RESISTIVITY, SENSOR_MULTILEVEL_SCALE_OHM_METER, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_LOUDNESS(GETTER)						ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_LOUDNESS, SENSOR_MULTILEVEL_SCALE_DECIBELS, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_ZERO_DECIMALS, GETTER))
#define ZUNO_SENSOR_MULTILEVEL_ELECTRICAL_CONDUCTIVITY(GETTER)				ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_ELECTRICAL_CONDUCTIVITY, SENSOR_MULTILEVEL_SCALE_SIEMENS_PER_METER, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_FREQUENCY(GETTER)							ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_FREQUENCY, SENSOR_MULTILEVEL_SCALE_HERTZ, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_TIME(GETTER)									ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_TIME, SENSOR_MULTILEVEL_SCALE_SECOND, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_TARGET_TEMPERATURE(GETTER)					ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_TARGET_TEMPERATURE, SENSOR_MULTILEVEL_SCALE_CELSIUS, SENSOR_MULTILEVEL_SIZE_ONE_BYTE, SENSOR_MULTILEVEL_PRECISION_ZERO_DECIMALS, GETTER)
#define ZUNO_SENSOR_MULTILEVEL_WATER_FLOW(GETTER)							ZUNO_SENSOR_MULTILEVEL(ZUNO_SENSOR_MULTILEVEL_TYPE_WATER_FLOW, SENSOR_MULTILEVEL_SCALE_LITERS_PER_HOUR, SENSOR_MULTILEVEL_SIZE_TWO_BYTE, SENSOR_MULTILEVEL_PRECISION_ONE_DECIMAL, GETTER)

// Thermostat support

//#define 
// Additional Macroses






// Associations
// -----------------------------------------------------------------
enum {
	ZUNO_ASSOC_BASIC_SET_NUMBER = 1, 						//0x01
	ZUNO_ASSOC_BASIC_SET_AND_DIM_NUMBER,				//0x02
	ZUNO_ASSOC_SCENE_ACTIVATION_NUMBER, 				//0x03
	ZUNO_ASSOC_DOORLOCK_CONTROL_NUMBER,
	ZUNO_END_OF_SUPPORTED_ASSOC_NUM

};

#define ZUNO_ASSOC_NO_PARAMS 							0x00

#define ZUNO_NO_ASSOCIATIONS							{0, 0}
#define ZUNO_ASSOCIATION_GROUP_SET_VALUE 				{ZUNO_ASSOC_BASIC_SET_NUMBER, ZUNO_ASSOC_NO_PARAMS}
#define ZUNO_ASSOCIATION_GROUP_SET_VALUE_AND_DIM 		{ZUNO_ASSOC_BASIC_SET_AND_DIM_NUMBER, ZUNO_ASSOC_NO_PARAMS}
#define ZUNO_ASSOCIATION_GROUP_SCENE_CONTROL 			{ZUNO_ASSOC_SCENE_ACTIVATION_NUMBER, ZUNO_ASSOC_NO_PARAMS}
#define ZUNO_ASSOCIATION_GROUP_DOORLOCK					{ZUNO_ASSOC_DOORLOCK_CONTROL_NUMBER, ZUNO_ASSOC_NO_PARAMS}

//TODO #define ZUNO_ASSOCIATION_GROUP_COLOR_CONTROL 		 		{}
//TODO #define ZUNO_ASSOCIATION_GROUP_THERMOSTAT_CONTROL 		 	{}


// -----------------------------------------------------------------

// Sleeping Mode
// -----------------------------------------------------------------

enum {
	ZUNO_MODE_ALWAYS_LISTENING_NUMBER,				//0
	ZUNO_MODE_WAKE_UP_NUMBER,						//1
	ZUNO_MODE_FLIRS_NUMBER,							//2
};

#define ZUNO_SLEEPING_MODE_ALWAYS_AWAKE 			{ZUNO_MODE_ALWAYS_LISTENING_NUMBER, 0, 0}
#define ZUNO_SLEEPING_MODE_SLEEPING			 		{ZUNO_MODE_WAKE_UP_NUMBER, 0, 0}
#define ZUNO_SLEEPING_MODE_FREQUENTLY_AWAKE 		{ZUNO_MODE_FLIRS_NUMBER, 0, 0}

// -----------------------------------------------------------------
				

#define ZUNO_MAX_MULTI_CHANNEL_NUMBER 					32

// SPI
// -----------------------------------------------------------------
#define SPI_SPEED_8_MHZ   0x00
#define SPI_SPEED_4_MHZ   0x01
#define SPI_SPEED_2_MHZ   0x02
#define SPI_SPEED_1_MHZ   0x03

#define SPI_MODE0       0x00
#define SPI_MODE1       0x01
#define SPI_MODE2       0x02
#define SPI_MODE3       0x03

#define MSBFIRST     0x01
#define LSBFIRST     0x00
// -----------------------------------------------------------------


#define CHANGE 1
#define FALLING 2
#define RISING 3

// ADC REF
// set it up via  analogReference()
// ZUno specific
#define ADC_HIGH_EXTERNAL	0x00  // Use pin A0 as external High reference source						
#define ADC_HIGH_INTERNAL	0x01  // Use built-in 1.2V source as Hight reference 							
#define ADC_HIGH_VCC		0x02  // Use VCC as High reference
#define ADC_LOW_EXTERNAL	0x00  // Use pin A1 as external Low reference source							
#define ADC_LOW_GND			0x04  // Use GND as Low reference							
// Arduino-like								
#define DEFAULT 	(ADC_HIGH_VCC | ADC_LOW_GND) 		// VCC for High reference and GND for Low reference 
#define INTERNAL 	(ADC_HIGH_INTERNAL | ADC_LOW_GND)  	// 1.2V internal reference source for Hight reference and GND for Low Reference
#define EXTERNAL 	(ADC_HIGH_EXTERNAL | ADC_LOW_GND) 	// pin A0 for High reference, GND for Low reference

// Advanced ADC options
// set it up via  zunoADCAdvConfig()								
#define ZUNO_ADC_ADV_BUFFERED 0x01
#define ZUNO_ADC_ADV_AZP128   0x00
#define ZUNO_ADC_ADV_AZP256   0x40
#define ZUNO_ADC_ADV_AZP512   0x80
#define ZUNO_ADC_ADV_AZP1024  0xC0

// GPT constants

#define ZUNO_GPT_SCALE1024    0x04
#define ZUNO_GPT_IMWRITE	  0x40	
#define ZUNO_GPT_CYCLIC		  0x08	


// DYNAMIC CHANNELS
#define ZUNO_MAX_ASSOC_NUMBER				31
#define SKETCH_FLAG_DEBUG 					0x80
#define SKETCH_FLAG_FLIRS					0x03
#define SKETCH_FLAG_SLEEPING				0x01
#define SKETCH_FLAG_S2_UNAUTHENTICATED_BIT 	0x04
#define SKETCH_FLAG_S2_AUTHENTICATED_BIT 	0x08
#define SKETCH_FLAG_S2_ACCESS_BIT 			0x10
#define SKETCH_FLAG_SENSORBINARY_ON 		0x20
#define SKETCH_FLAG_NOTIFICATION_ON 		0x40
#define SKETCH_FLAG2_LED_OFF 				0x04

#define ZUNO_MAX_PARAMDATA		   			12	

enum
{
	ZUNO_CONFIG_DEFAULT,
	ZUNO_CONFIG_PREVIOUS,
	ZUNO_CONFIG_CURRENT
};

enum {
	ZUNO_PRODUCTTYPE_DEFAULT,
	ZUNO_PRODUCTTYPE_AUTO,
	ZUNO_PRODUCTTYPE_CUSTOM
};

#define ZUNO_CLEAR_CHANNELS() 		g_user_sketch.n_channels = 0
#define ZUNO_CLEAR_ASSOCIATIONS() 	g_user_sketch.n_assocs = 0
#define ZUNO_CLEAR_FLAGS() 			g_user_sketch.flags = SKETCH_FLAG_NOTIFICATION_ON|SKETCH_FLAG_SENSORBINARY_ON; g_user_sketch.flags2 = 0 // 60 == SENSOR_BINARY_ENABLED, NOTIFICATION_ENABLED
#define ZUNO_CLEAR_PRODTYPE() 		g_user_sketch.product_type = ZUNO_PRODUCTTYPE_DEFAULT
#define ZUNO_START_CONFIG() ZUNO_CLEAR_FLAGS();\
							ZUNO_CLEAR_CHANNELS();\
							ZUNO_CLEAR_ASSOCIATIONS();\
							ZUNO_CLEAR_PRODTYPE();\
							ZUNO_SET_ZWCHANNEL(0)
#define ZUNO_SET_FWUPGRADE_COUNT(N) g_user_sketch.flags2 = (N & 0x03)
#define ZUNO_SERVICELEDS_DISABLE()	g_user_sketch.flags2 |= SKETCH_FLAG2_LED_OFF;						
#define ZUNO_SET_ZWCHANNEL(CH) g_current_channel = CH; 
#define ZUNO_ADD_CHANNEL(TYPE,ST,P) zunoAddChannel(TYPE, ST, P);
#define ZUNO_ADD_CHANNEL_SWITCHBINARY() zunoAddChannel(ZUNO_SWITCH_BINARY_CHANNEL_NUMBER, 0, 0);
#define ZUNO_ADD_CHANNEL_SWITCHMULTILEVEL() zunoAddChannel(ZUNO_SWITCH_MULTILEVEL_CHANNEL_NUMBER, 0, 0);
#define ZUNO_ADD_ASSOCIATION(TYPE) zunoAddAssociation(TYPE)
#define ZUNO_GET_CONFIG_STATE() (g_ptr_config[ZUNO_CFG_BYTE_USERMODE])

#define ZUNO_MODE_SLEEPING() g_user_sketch.flags |= SKETCH_FLAG_SLEEPING
#define ZUNO_MODE_FLIRS() g_user_sketch.flags |= SKETCH_FLAG_FLIRS
#define ZUNO_MODE_ALWAYS_AWAKE() g_user_sketch.flags &= ~(SKETCH_FLAG_FLIRS)
#define ZUNO_DEBUG_ON() g_user_sketch.flags |= (SKETCH_FLAG_DEBUG)
#define ZUNO_DEBUG_OFF() g_user_sketch.flags &= ~(SKETCH_FLAG_DEBUG)
#define ZUNO_S2_ACCESS(s2bits)  g_user_sketch.flags |= (s2bits & 0x1C)
#define ZUNO_DISABLE_NOTIFICATION() g_user_sketch.flags &=  ~(SKETCH_FLAG_NOTIFICATION_ON)
#define ZUNO_DISABLE_SENSORBINARY() g_user_sketch.flags &=  ~(SKETCH_FLAG_SENSORBINARY_ON)

#define ZUNO_COMMIT_CONFIG() zunoCommitConfig()

#define ZUNO_PRODUCT_TYPE(P) g_user_sketch.product_type = P
#define ZUNO_CUSTOM_PRODUCT_ID(MAJOR,MINOR) g_user_sketch.custom_id_maj = MAJOR; g_user_sketch.custom_id_min = MINOR							

#define SETTER_BIT 0x01
#define CONFIG_DATA_FLAG 0x40

enum {
	ZUNO_CALLBACK_COMMANDHANDLER_BASIC_SET,
	ZUNO_CALLBACK_COMMANDHANDLER_BASIC_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_BASIC_REPORT,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHB_SET,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHB_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHB_REPORT,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHM_SET,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHM_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHM_START_LC,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHM_STOP_LC,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHM_SUPPORTED_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHM_REPORT,
	ZUNO_CALLBACK_COMMANDHANDLER_SENSORB_SUPPORTED_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_SENSORB_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_SENSORB_REPORT,
	ZUNO_CALLBACK_COMMANDHANDLER_NOTIFICATION_SET,
	ZUNO_CALLBACK_COMMANDHANDLER_NOTIFICATION_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_NOTIFICATION_SUPPORTED_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_NOTIFICATION_SUPPORTED_GET_EVENT,
	ZUNO_CALLBACK_COMMANDHANDLER_NOTIFICATION_REPORT,
	ZUNO_CALLBACK_COMMANDHANDLER_SENSORM_SUPPORTED_GET, // 20 = 0x14
	ZUNO_CALLBACK_COMMANDHANDLER_SENSORM_SUPPORTED_GET_SCALE,
	ZUNO_CALLBACK_COMMANDHANDLER_SENSORM_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_SENSORM_REPORT,
	ZUNO_CALLBACK_COMMANDHANDLER_METER_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_METER_RESET,
	ZUNO_CALLBACK_COMMANDHANDLER_METER_SUPPORTED_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_METER_REPORT,
	ZUNO_CALLBACK_COMMANDHANDLER_DOORLOCK_SET,
	ZUNO_CALLBACK_COMMANDHANDLER_DOORLOCK_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_DOORLOCK_CONFIG_SET,
	ZUNO_CALLBACK_COMMANDHANDLER_DOORLOCK_CONFIG_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_THERMOSTAT_MODE_SET,
	ZUNO_CALLBACK_COMMANDHANDLER_THERMOSTAT_MODE_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_THERMOSTAT_MODE_SUPPORTED_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_THERMOSTAT_SETPOINT_SET,
	ZUNO_CALLBACK_COMMANDHANDLER_THERMOSTAT_SETPOINT_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_THERMOSTAT_SETPOINT_SUPPORTED_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_THERMOSTAT_SETPOINT_CAPABILITIES_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHC_SUPPORTED_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHC_GET,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHC_SET,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHC_START_LC,
	ZUNO_CALLBACK_COMMANDHANDLER_SWITCHC_STOP_LC,
	ZUNO_CALLBACK_CUSTOM_BATTERY_REPORT,
	ZUNO_CALLBACK_COMMANDHANDLER_MAX = ZUNO_CALLBACK_CUSTOM_BATTERY_REPORT,
	ZUNO_CALLBACK_TIMER = 0x80,
	ZUNO_CALLBACK_CUSTOM_PARAMETER_SET = 0x81,
	ZUNO_CALLBACK_CUSTOM_PARAMETER_GET = 0x82,
	ZUNO_CALLBACK_CUSTOM_BATTERY_GET = 0x83,
	ZUNO_CALLBACK_CUSTOM_FWUPDATE_META = 0x85,
	ZUNO_CALLBACK_CUSTOM_FWUPDATE_READY = 0x86,
	ZUNO_CALLBACK_LOG_EVENT = 0xF0
};

#define ZUNO_WUPFLAGS_INT1_LOW     0x00
#define ZUNO_WUPFLAGS_INT1_HIGH    0x01
#define ZUNO_WUPFLAGS_INT1_KEYSCAN 0x02

#define F_CPU			  16000000

// REPORTS
/*

#define EXTRACT_REPORT_VALUE_1B(D) D.param.bParam
#define EXTRACT_REPORT_VALUE_2B(D) D.param.wParam
#define EXTRACT_REPORT_VALUE_4B(D) D.param.dwParam
#define EXTRACT_REPORT_TYPE(D)     D.main_type     
#define EXTRACT_REPORT_SENSOR_TYPE(D) D.sub_type
#define EXTRACT_REPORT_SENSOR_SCALE(D) D.scale
#define EXTRACT_REPORT_GROUP_ID(D) D.groupId
#define EXTRACT_REPORT_NODE_ID(D) D.nodeId
#define EXTRACT_REPORT_SENSOR_VALUE_SIZE(D) (D.scale&0x07)
#define EXTRACT_REPORT_SENSOR_VALUE_UNITS(D) ((D.scale >> 3)& 0x03)
#define EXTRACT_REPORT_SENSOR_VALUE_PRECISION(D) ((D.scale >> 5)& 0x07)
#define EXTRACT_REPORT_METER_TYPE(D) (D.sub_type & 0x1F)
#define EXTRACT_REPORT_METER_RATE(D) ((D.sub_type >> 5) & 0x03)
#define EXTRACT_REPORT_METER_VALUE_SIZE(D) EXTRACT_REPORT_SENSOR_VALUE_SIZE(D)
#define EXTRACT_REPORT_METER_VALUE_UNITS(D) (((D.sub_type >> 5) & 0x04) | ((D.scale >> 3)& 0x03))
#define EXTRACT_REPORT_METER_VALUE_PRECISION(D) EXTRACT_REPORT_SENSOR_VALUE_PRECISION(D)

#define REPORT_VALUE_1B() EXTRACT_REPORT_VALUE_1B(callback_data)
#define REPORT_VALUE_2B() EXTRACT_REPORT_VALUE_2B(callback_data)
#define REPORT_VALUE_4B() EXTRACT_REPORT_VALUE_4B(callback_data)
#define REPORT_TYPE()     EXTRACT_REPORT_TYPE(callback_data)    
#define REPORT_SENSOR_TYPE() EXTRACT_REPORT_SENSOR_TYPE(callback_data)
#define REPORT_SENSOR_SCALE() EXTRACT_REPORT_SENSOR_SCALE(callback_data)
#define REPORT_GROUP_ID() EXTRACT_REPORT_GROUP_ID(callback_data)
#define REPORT_NODE_ID()  EXTRACT_REPORT_NODE_ID(callback_data)
#define REPORT_SENSOR_VALUE_SIZE() EXTRACT_REPORT_SENSOR_VALUE_SIZE(callback_data)
#define REPORT_SENSOR_VALUE_UNITS() EXTRACT_REPORT_SENSOR_VALUE_UNITS(callback_data)
#define REPORT_SENSOR_VALUE_PRECISION() EXTRACT_REPORT_SENSOR_VALUE_PRECISION(callback_data)
#define REPORT_METER_TYPE() EXTRACT_REPORT_METER_TYPE(callback_data)
#define REPORT_METER_RATE() EXTRACT_REPORT_METER_RATE(callback_data)
#define REPORT_METER_VALUE_SIZE() EXTRACT_REPORT_METER_VALUE_SIZE(callback_data)
#define REPORT_METER_VALUE_UNITS() EXTRACT_REPORT_METER_VALUE_UNITS(callback_data)
#define REPORT_METER_VALUE_PRECISION() EXTRACT_REPORT_METER_VALUE_PRECISION(callback_data)

#define REPORT_DATA_TYPE _xd_ZUNOChannelHandler_t
#define CLONE_REPORT_DATA(A) memcpy((BYTE*)&A, (BYTE*)&callback_data, sizeof(_xd_ZUNOChannelHandler_t));
*/

#define REPORT_BATTERY_VALUE() (g_cmd[2])
#define REPORT_BASIC_VALUE() (g_cmd[2])
#define REPORT_SWITCH_MULTILEVEL_VALUE() (g_cmd[2])
#define REPORT_SWITCH_BINARY_VALUE() (g_cmd[2])
#define REPORT_SENSOR_BINARY_VALUE() (g_cmd[2])
#define REPORT_SENSOR_BINARY_TYPE() (g_cmd[3])

#define REPORT_NOTIFICATION_STATUS() 		(g_cmd[5])
#define REPORT_NOTIFICATION_TYPE() 			(g_cmd[6])
#define REPORT_NOTIFICATION_EVENT() 		(g_cmd[7])
#define REPORT_NOTIFICATION_PARAM_LENGTH() 	(g_cmd[8])
#define REPORT_NOTIFICATION_EVENT_PARAM(N) 	(g_cmd[9+N])

#define REPORT_SENSOR_MULTILEVEL_TYPE() (g_cmd[2])
#define REPORT_SENSOR_MULTILEVEL_SIZE() (g_cmd[3]&0x07)
#define REPORT_SENSOR_MULTILEVEL_SCALE() ((g_cmd[3] >> 3)&0x03)
#define REPORT_SENSOR_MULTILEVEL_PRECISION() ((g_cmd[3] >> 5)&0x07)
#define REPORT_SENSOR_MULTILEVEL_VALUE_1B() (g_cmd[4])
#define REPORT_SENSOR_MULTILEVEL_VALUE_2B() ((word(g_cmd[4]) << 8) | g_cmd[5])
#define REPORT_SENSOR_MULTILEVEL_VALUE_4B() ((dword(g_cmd[4]) << 24) | (dword(g_cmd[5]) << 16) | (dword(g_cmd[6]) << 8) | g_cmd[7])

#define REPORT_METER_TYPE() (g_cmd[2]&0x1F)
#define REPORT_METER_SIZE() (g_cmd[3]&0x07)
#define REPORT_METER_SCALE() (((g_cmd[2] & 0x80) >> 5) | ((g_cmd[3] >> 3)&0x03))
#define REPORT_METER_PRECISION() ((g_cmd[3] >> 5)&0x07)
#define REPORT_METER_VALUE_1B() (g_cmd[4])
#define REPORT_METER_VALUE_2B() ((word(g_cmd[4]) << 8) | g_cmd[5])
#define REPORT_METER_VALUE_4B() ((dword(g_cmd[4]) << 24) | (dword(g_cmd[5]) << 16) | (dword(g_cmd[6]) << 8) | g_cmd[7])

#define REPORT_NODE_ID() (callback_data.param1.buffParam[1])

#define REPORT_VALUE_1B() 	   g_cmd[2]


#endif // #define __ZUNO_DEFINES___
